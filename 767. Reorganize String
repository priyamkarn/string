class Solution {
public:
    string reorganizeString(string s) {
        int freq[26]={0};
        for(int i=0;i<s.length();i++)
        {
            freq[s[i]-'a']++;
        }
        priority_queue<pair<int,int>>pq;
        int maxlimit=1;
        for(int i=0;i<26;i++)
        {
            if(freq[i]>0)
            {
                pq.push(make_pair(freq[i],i));
            }
        }
        string res="";
        while(!pq.empty())
        {
            int frq1=pq.top().first;
            int chr1=pq.top().second;
            pq.pop();
            if(res.size()==0 || res.back()!=(char)(chr1+'a'))
            {
                res+=(char)(chr1+'a');
                frq1--;
                if(frq1)
                {
                    pq.push(make_pair(frq1,chr1));
                }
            }
            else
            {
                if(pq.size()==0)
                {
                    break;
                }
                int chr2=pq.top().second;
                int frq2=pq.top().first;
                pq.pop();
                res+=(char)(chr2+'a');
                frq2--;
                if(frq2)
                {
                    pq.push(make_pair(frq2,chr2));
                }
                pq.push(make_pair(frq1,chr1));
            }
        }
        if(res.size()!=s.size())
        {
            return "";
        }
        return res;
    }
};
